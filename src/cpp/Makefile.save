CPPFLAGS = -Wall -std=c++11 -c
CFLAGS = -Wall -std=c++11 -fPIC -shared
LIBLINKEGE = ../../external_libraries/huji_rich/librich.a #need to put the directory for include for elad code and boost
INCLUDEPATH = -I../../external_libraries/huji_rich/source/3D/GeometryCommon -I../../external_libraries/boost_dump/boost_1_66_0 -I../../external_libraries/include


all: vivid python

python: set_libs_env Mesh.so Model.so Surf.so

Mesh.so: Mesh.cpp
	g++ Mesh.cpp $(LIBLINKEGE) $(INCLUDEPATH) $(CFLAGS) -o Mesh.so

Model.so: Model.cpp
	g++ Model.cpp $(LIBLINKEGE) $(INCLUDEPATH) $(CFLAGS) -o Model.so

Surf.so: Surf.cpp
	g++ Surf.cpp $(LIBLINKEGE) $(INCLUDEPATH) $(CFLAGS) -o Surf.so



vivid: set_libs_env Model.o Mesh.o Surf.o IndexedFace.o SurfFace.o Point.o Utils.o
	g++ -Wall Main.cpp Model.o Mesh.o Surf.o IndexedFace.o SurfFace.o Point.o Utils.o -o vivid

Model.o: Model.cpp Model.hg++ Model.cpp $(LIBLINKEGE) $(INCLUDEPATH) $(CPPFLAGS) -o Model.o 
    
Mesh.o: Mesh.cpp Mesh.h
    g++ Mesh.cpp $(LIBLINKEGE) $(INCLUDEPATH) $(CPPFLAGS) -o Mesh.o 
    
Surf.o: Surf.cpp Surf.h
    g++ Surf.cpp $(LIBLINKEGE) $(INCLUDEPATH) $(CPPFLAGS) -o Surf.o 
    
IndexedFace.o: IndexedFace.cpp IndexedFace.h
    g++ IndexedFace.cpp $(LIBLINKEGE) $(INCLUDEPATH) $(CPPFLAGS) -o IndexedFace.o 
    
SurfFace.o: SurfFace.cpp SurfFace.h
    g++ SurfFace.cpp $(LIBLINKEGE) $(INCLUDEPATH) $(CPPFLAGS) -o SurfFace.o 
    
Point.o: Point.cpp Point.h
    g++ Point.cpp $(LIBLINKEGE) $(INCLUDEPATH) $(CPPFLAGS) -o Point.o
    
Utils.o: Utils.cpp Utils.h
    g++ Utils.cpp $(LIBLINKEGE) $(INCLUDEPATH) $(CPPFLAGS) -o Utils.o 
    
    
set_libs_env: external_libraries/include/H5Cpp.h external_libraries/boost_dump/boost_1_66_0/boost/container/static_vector.hpp

external_libraries/include/H5Cpp.h: external_libraries/hdf5_dump/hdf5-1.10.3/c++/src/H5Cpp.h
    cd ../../external_libraries/hdf5_dump/hdf5-1.10.3 && \
    ./configure --enable-cxx --prefix=`cd ../.. && pwd`
    cd ../../external_libraries/hdf5_dump/hdf5-1.10.3 && make
    cd ../../external_libraries/hdf5_dump/hdf5-1.10.3 && make install

external_libraries/hdf5_dump/hdf5-1.10.3/c++/src/H5Cpp.h: | external_libraries/hdf5_dump/hdf5-1.10.3.tar.gz
    cd ../../external_libraries/hdf5_dump/ && tar xf ./hdf5-1.10.3.tar.gz

external_libraries/boost_dump/boost_1_66_0/boost/container/static_vector.hpp: | external_libraries/boost_dump/boost_1_66_0.tar.bz2
    cd ../../external_libraries/boost_dump/ && tar xf ./boost_1_66_0.tar.bz2



external_libraries/hdf5_dump/hdf5-1.10.3.tar.gz:
    mkdir -p ../../external_libraries/hdf5_dump
    cd ../../external_libraries/hdf5_dump && \
    wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.3/src/hdf5-1.10.3.tar.gz

external_libraries/boost_dump/boost_1_66_0.tar.bz2:
    mkdir -p ../../external_libraries/boost_dump
    cd ../../external_libraries/boost_dump && \
    wget 'http://sourceforge.net/projects/boost/files/boost/1.66.0/boost_1_66_0.tar.bz2/download'
    cd ../../external_libraries/boost_dump && mv download boost_1_66_0.tar.bz2
