<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0-608cb11914-20190413 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /home/ghil/Development/Vivid/vivid</line>
</preamble>

<pid>18246</pid>
<ppid>12986</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--tool=memcheck</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/tmp/clion-valgrindf02a7c02-ce6e-4cc4-a21e-e014628d37d8/valgrind_output_%p</arg>
    <arg>--gen-suppressions=all</arg>
    <arg>-v</arg>
    <arg>--leak-check=full</arg>
    <arg>--leak-resolution=med</arg>
    <arg>--track-origins=yes</arg>
    <arg>--vgdb=no</arg>
  </vargv>
  <argv>
    <exe>/home/ghil/Development/Vivid/vivid</exe>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.346 </time>
</status>

<fatal_signal>
  <tid>1</tid>
  <signo>6</signo>
  <signame>SIGABRT</signame>
  <sicode>-6</sicode>
  <stack>
    <frame>
      <ip>0x58CF18B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libc-2.31.so</obj>
      <fn>raise</fn>
      <dir>/build/glibc-eX1tMB/glibc-2.31/signal/../sysdeps/unix/sysv/linux</dir>
      <file>raise.c</file>
      <line>51</line>
    </frame>
    <frame>
      <ip>0x58AE858</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libc-2.31.so</obj>
      <fn>abort</fn>
      <dir>/build/glibc-eX1tMB/glibc-2.31/stdlib</dir>
      <file>abort.c</file>
      <line>79</line>
    </frame>
    <frame>
      <ip>0x55DA950</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
    </frame>
    <frame>
      <ip>0x55E647B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
    </frame>
    <frame>
      <ip>0x55E64E6</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
      <fn>std::terminate()</fn>
    </frame>
    <frame>
      <ip>0x55E6798</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
      <fn>__cxa_throw</fn>
    </frame>
    <frame>
      <ip>0x12F65B</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>boost::container::throw_bad_alloc()</fn>
      <dir>/usr/include/boost/container</dir>
      <file>throw_exception.hpp</file>
      <line>107</line>
    </frame>
    <frame>
      <ip>0x142B0E</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>on_capacity_overflow</fn>
      <dir>/usr/include/boost/container</dir>
      <file>static_vector.hpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x142B0E</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>on_capacity_overflow</fn>
      <dir>/usr/include/boost/container</dir>
      <file>static_vector.hpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x142B0E</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>on_capacity_overflow</fn>
      <dir>/usr/include/boost/container</dir>
      <file>vector.hpp</file>
      <line>638</line>
    </frame>
    <frame>
      <ip>0x142B0E</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>boost::container::vec_iterator&lt;unsigned long*, false&gt; boost::container::vector&lt;unsigned long, boost::container::dtl::static_storage_allocator&lt;unsigned long, 128ul, 0ul, true&gt;, void&gt;::priv_forward_range_insert_no_capacity&lt;boost::container::dtl::insert_copy_proxy&lt;boost::container::dtl::static_storage_allocator&lt;unsigned long, 128ul, 0ul, true&gt;, unsigned long*&gt; &gt;(unsigned long* const&amp;, unsigned long, boost::container::dtl::insert_copy_proxy&lt;boost::container::dtl::static_storage_allocator&lt;unsigned long, 128ul, 0ul, true&gt;, unsigned long*&gt;, boost::move_detail::integral_constant&lt;unsigned int, 0u&gt;)</fn>
      <dir>/usr/include/boost/container</dir>
      <file>vector.hpp</file>
      <line>2740</line>
    </frame>
    <frame>
      <ip>0x13B4EA</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>void boost::container::vector&lt;unsigned long, boost::container::dtl::static_storage_allocator&lt;unsigned long, 128ul, 0ul, true&gt;, void&gt;::priv_push_back&lt;unsigned long const&amp;&gt;(unsigned long const&amp;)</fn>
      <dir>/usr/include/boost/container</dir>
      <file>vector.hpp</file>
      <line>2652</line>
    </frame>
    <frame>
      <ip>0x1257C5</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>push_back</fn>
      <dir>/usr/include/boost/container</dir>
      <file>vector.hpp</file>
      <line>1901</line>
    </frame>
    <frame>
      <ip>0x1257C5</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>Voronoi3D::BuildVoronoi(std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;)</fn>
      <dir>/home/ghil/Development/Vivid/lib/huji-rich-Elad3DFast/source/3D/GeometryCommon</dir>
      <file>Voronoi3D.cpp</file>
      <line>1385</line>
    </frame>
    <frame>
      <ip>0x124FD2</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>Voronoi3D::Build(std::vector&lt;Vector3D, std::allocator&lt;Vector3D&gt; &gt; const&amp;)</fn>
      <dir>/home/ghil/Development/Vivid/lib/huji-rich-Elad3DFast/source/3D/GeometryCommon</dir>
      <file>Voronoi3D.cpp</file>
      <line>1322</line>
    </frame>
    <frame>
      <ip>0x2A8EE6</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>compute_vornoi(std::vector&lt;CPoint, std::allocator&lt;CPoint&gt; &gt;&amp;, double)</fn>
      <dir>/home/ghil/Development/Vivid/lib</dir>
      <file>External.cpp</file>
      <line>14</line>
    </frame>
  </stack>
</fatal_signal>


<status>
  <state>FINISHED</state>
  <time>00:21:29:19.211 </time>
</status>

<error>
  <unique>0x7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>136 bytes in 1 blocks are possibly lost in loss record 8 of 49</text>
    <leakedbytes>136</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483B7F3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x55E52E3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28</obj>
      <fn>__cxa_allocate_exception</fn>
    </frame>
    <frame>
      <ip>0x12F637</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>boost::container::throw_bad_alloc()</fn>
      <dir>/usr/include/boost/container</dir>
      <file>throw_exception.hpp</file>
      <line>107</line>
    </frame>
    <frame>
      <ip>0x142B0E</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>on_capacity_overflow</fn>
      <dir>/usr/include/boost/container</dir>
      <file>static_vector.hpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x142B0E</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>on_capacity_overflow</fn>
      <dir>/usr/include/boost/container</dir>
      <file>static_vector.hpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x142B0E</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>on_capacity_overflow</fn>
      <dir>/usr/include/boost/container</dir>
      <file>vector.hpp</file>
      <line>638</line>
    </frame>
    <frame>
      <ip>0x142B0E</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>boost::container::vec_iterator&lt;unsigned long*, false&gt; boost::container::vector&lt;unsigned long, boost::container::dtl::static_storage_allocator&lt;unsigned long, 128ul, 0ul, true&gt;, void&gt;::priv_forward_range_insert_no_capacity&lt;boost::container::dtl::insert_copy_proxy&lt;boost::container::dtl::static_storage_allocator&lt;unsigned long, 128ul, 0ul, true&gt;, unsigned long*&gt; &gt;(unsigned long* const&amp;, unsigned long, boost::container::dtl::insert_copy_proxy&lt;boost::container::dtl::static_storage_allocator&lt;unsigned long, 128ul, 0ul, true&gt;, unsigned long*&gt;, boost::move_detail::integral_constant&lt;unsigned int, 0u&gt;)</fn>
      <dir>/usr/include/boost/container</dir>
      <file>vector.hpp</file>
      <line>2740</line>
    </frame>
    <frame>
      <ip>0x13B4EA</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>void boost::container::vector&lt;unsigned long, boost::container::dtl::static_storage_allocator&lt;unsigned long, 128ul, 0ul, true&gt;, void&gt;::priv_push_back&lt;unsigned long const&amp;&gt;(unsigned long const&amp;)</fn>
      <dir>/usr/include/boost/container</dir>
      <file>vector.hpp</file>
      <line>2652</line>
    </frame>
    <frame>
      <ip>0x1257C5</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>push_back</fn>
      <dir>/usr/include/boost/container</dir>
      <file>vector.hpp</file>
      <line>1901</line>
    </frame>
    <frame>
      <ip>0x1257C5</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>Voronoi3D::BuildVoronoi(std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;)</fn>
      <dir>/home/ghil/Development/Vivid/lib/huji-rich-Elad3DFast/source/3D/GeometryCommon</dir>
      <file>Voronoi3D.cpp</file>
      <line>1385</line>
    </frame>
    <frame>
      <ip>0x124FD2</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>Voronoi3D::Build(std::vector&lt;Vector3D, std::allocator&lt;Vector3D&gt; &gt; const&amp;)</fn>
      <dir>/home/ghil/Development/Vivid/lib/huji-rich-Elad3DFast/source/3D/GeometryCommon</dir>
      <file>Voronoi3D.cpp</file>
      <line>1322</line>
    </frame>
    <frame>
      <ip>0x2A8EE6</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>compute_vornoi(std::vector&lt;CPoint, std::allocator&lt;CPoint&gt; &gt;&amp;, double)</fn>
      <dir>/home/ghil/Development/Vivid/lib</dir>
      <file>External.cpp</file>
      <line>14</line>
    </frame>
    <frame>
      <ip>0x2832B9</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>CSurf::RunVorn()</fn>
      <dir>/home/ghil/Development/Vivid/src/ModelBuilder</dir>
      <file>Surf.cpp</file>
      <line>482</line>
    </frame>
    <frame>
      <ip>0x27FBB6</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>CSurf::CSurf(std::vector&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::allocator&lt;std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, double, double)</fn>
      <dir>/home/ghil/Development/Vivid/src/ModelBuilder</dir>
      <file>Surf.cpp</file>
      <line>40</line>
    </frame>
    <frame>
      <ip>0x2E35D5</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>RunMedicaneTests()</fn>
      <dir>/home/ghil/Development/Vivid/src</dir>
      <file>main.cpp</file>
      <line>65</line>
    </frame>
    <frame>
      <ip>0x2E39A5</ip>
      <obj>/home/ghil/Development/Vivid/vivid</obj>
      <fn>main</fn>
      <dir>/home/ghil/Development/Vivid/src</dir>
      <file>main.cpp</file>
      <line>87</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>malloc</fun> </sframe>
    <sframe> <fun>__cxa_allocate_exception</fun> </sframe>
    <sframe> <fun>_ZN5boost9container15throw_bad_allocEv</fun> </sframe>
    <sframe> <fun>on_capacity_overflow</fun> </sframe>
    <sframe> <fun>on_capacity_overflow</fun> </sframe>
    <sframe> <fun>on_capacity_overflow</fun> </sframe>
    <sframe> <fun>_ZN5boost9container6vectorImNS0_3dtl24static_storage_allocatorImLm128ELm0ELb1EEEvE37priv_forward_range_insert_no_capacityINS2_17insert_copy_proxyIS4_PmEEEENS0_12vec_iteratorIS8_Lb0EEERKS8_mT_NS_11move_detail17integral_constantIjLj0EEE</fun> </sframe>
    <sframe> <fun>_ZN5boost9container6vectorImNS0_3dtl24static_storage_allocatorImLm128ELm0ELb1EEEvE14priv_push_backIRKmEEvOT_</fun> </sframe>
    <sframe> <fun>push_back</fun> </sframe>
    <sframe> <fun>_ZN9Voronoi3D12BuildVoronoiERKSt6vectorImSaImEE</fun> </sframe>
    <sframe> <fun>_ZN9Voronoi3D5BuildERKSt6vectorI8Vector3DSaIS1_EE</fun> </sframe>
    <sframe> <fun>_Z14compute_vornoiRSt6vectorI6CPointSaIS0_EEd</fun> </sframe>
    <sframe> <fun>_ZN5CSurf7RunVornEv</fun> </sframe>
    <sframe> <fun>_ZN5CSurfC1ESt6vectorIS0_IdSaIdEESaIS2_EES0_IbSaIbEES2_dd</fun> </sframe>
    <sframe> <fun>_Z16RunMedicaneTestsv</fun> </sframe>
    <sframe> <fun>main</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:__cxa_allocate_exception
   fun:_ZN5boost9container15throw_bad_allocEv
   fun:on_capacity_overflow
   fun:on_capacity_overflow
   fun:on_capacity_overflow
   fun:_ZN5boost9container6vectorImNS0_3dtl24static_storage_allocatorImLm128ELm0ELb1EEEvE37priv_forward_range_insert_no_capacityINS2_17insert_copy_proxyIS4_PmEEEENS0_12vec_iteratorIS8_Lb0EEERKS8_mT_NS_11move_detail17integral_constantIjLj0EEE
   fun:_ZN5boost9container6vectorImNS0_3dtl24static_storage_allocatorImLm128ELm0ELb1EEEvE14priv_push_backIRKmEEvOT_
   fun:push_back
   fun:_ZN9Voronoi3D12BuildVoronoiERKSt6vectorImSaImEE
   fun:_ZN9Voronoi3D5BuildERKSt6vectorI8Vector3DSaIS1_EE
   fun:_Z14compute_vornoiRSt6vectorI6CPointSaIS0_EEd
   fun:_ZN5CSurf7RunVornEv
   fun:_ZN5CSurfC1ESt6vectorIS0_IdSaIdEESaIS2_EES0_IbSaIbEES2_dd
   fun:_Z16RunMedicaneTestsv
   fun:main
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: possible</skaux>
    <sframe> <fun>malloc</fun> </sframe>
    <sframe> <fun>__cxa_allocate_exception</fun> </sframe>
    <sframe> <fun>_ZN5boost9container15throw_bad_allocEv</fun> </sframe>
    <sframe> <fun>on_capacity_overflow</fun> </sframe>
    <sframe> <fun>on_capacity_overflow</fun> </sframe>
    <sframe> <fun>on_capacity_overflow</fun> </sframe>
    <sframe> <fun>_ZN5boost9container6vectorImNS0_3dtl24static_storage_allocatorImLm128ELm0ELb1EEEvE37priv_forward_range_insert_no_capacityINS2_17insert_copy_proxyIS4_PmEEEENS0_12vec_iteratorIS8_Lb0EEERKS8_mT_NS_11move_detail17integral_constantIjLj0EEE</fun> </sframe>
    <sframe> <fun>_ZN5boost9container6vectorImNS0_3dtl24static_storage_allocatorImLm128ELm0ELb1EEEvE14priv_push_backIRKmEEvOT_</fun> </sframe>
    <sframe> <fun>push_back</fun> </sframe>
    <sframe> <fun>_ZN9Voronoi3D12BuildVoronoiERKSt6vectorImSaImEE</fun> </sframe>
    <sframe> <fun>_ZN9Voronoi3D5BuildERKSt6vectorI8Vector3DSaIS1_EE</fun> </sframe>
    <sframe> <fun>_Z14compute_vornoiRSt6vectorI6CPointSaIS0_EEd</fun> </sframe>
    <sframe> <fun>_ZN5CSurf7RunVornEv</fun> </sframe>
    <sframe> <fun>_ZN5CSurfC1ESt6vectorIS0_IdSaIdEESaIS2_EES0_IbSaIbEES2_dd</fun> </sframe>
    <sframe> <fun>_Z16RunMedicaneTestsv</fun> </sframe>
    <sframe> <fun>main</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:__cxa_allocate_exception
   fun:_ZN5boost9container15throw_bad_allocEv
   fun:on_capacity_overflow
   fun:on_capacity_overflow
   fun:on_capacity_overflow
   fun:_ZN5boost9container6vectorImNS0_3dtl24static_storage_allocatorImLm128ELm0ELb1EEEvE37priv_forward_range_insert_no_capacityINS2_17insert_copy_proxyIS4_PmEEEENS0_12vec_iteratorIS8_Lb0EEERKS8_mT_NS_11move_detail17integral_constantIjLj0EEE
   fun:_ZN5boost9container6vectorImNS0_3dtl24static_storage_allocatorImLm128ELm0ELb1EEEvE14priv_push_backIRKmEEvOT_
   fun:push_back
   fun:_ZN9Voronoi3D12BuildVoronoiERKSt6vectorImSaImEE
   fun:_ZN9Voronoi3D5BuildERKSt6vectorI8Vector3DSaIS1_EE
   fun:_Z14compute_vornoiRSt6vectorI6CPointSaIS0_EEd
   fun:_ZN5CSurf7RunVornEv
   fun:_ZN5CSurfC1ESt6vectorIS0_IdSaIdEESaIS2_EES0_IbSaIbEES2_dd
   fun:_Z16RunMedicaneTestsv
   fun:main
}
]]>
    </rawtext>
  </suppression>
<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


